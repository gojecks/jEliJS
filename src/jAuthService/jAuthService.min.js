!function(){"use strict";function a(){var a={oauth:!1,jdb:!1,openid:!1,custom:!1},b=!1,c={},d={},e=3,f={};f.minlength=function(a,b){return!(jEli.$isObject(a)||!a)&&String(a).length>=b},f.maxlength=function(a,b){return!(jEli.$isObject(a)||!a)&&String(a).length<=b},f.emailvalidation=function(a){var b=/^\w+([\.-]?\w+)*@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return b.test(a)},f.domainvalidation=function(a){return/[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\.[a-zA-Z]{2,})+/.test(a)},this.setLoginType=function(c){c&&a[c]&&!b&&(a[c]=!0),b=c},this.loginServiceConfiguration=function(a){if(!jEli.$isObject(a))throw new error("Configuration is expected to be OBJECT not ("+typeof a+")");c=a},this.registerServiceConfiguration=function(a){if(!jEli.$isObject(a))throw new error("Configuration is expected to be OBJECT not ("+typeof a+")");d=a},this.setMaxLoginAttempt=function(a){e=a},this.setValidationConfiguration=function(a,b){return a&&b&&(f[a]=b),this},this.$get=function(){var a={};return a.getLoginConfiguration=function(){return c},a.getRegisterConfiguration=function(){return d},a.getLoginType=function(){return b},a.getLoginAttempt=function(){return e},a.getValidationConfiguration=function(){return f},a}}function b(a,b,c){function d(a,b,c){h[b].failedValidation[a]=c,h[b].validationFailed=!0}function e(a,b){var c=[];return jEli.forEach(b,function(b,d){var e=!1;i[b.toLowerCase()]?e=(i[b.toLowerCase()]||function(){})(a,d):jEli.$isFunction(d)&&(e=d(a)),e||c.push(b)}),c}function f(a,b){if(!b&&!jEli.$isObject(b))throw new error("Configuration is expected to be Object not ("+typeof b+")");if(h[a]&&jEli.$isObject(b)){h[a].requiresValidation=!0;var c=this;this.validateFields=function(){return h[a].requiresValidation=!1,h[a].failedValidation={},h.validate(a,b),c}}return this}var g={},h={register:{},login:{},authManager:{}},i=c.getValidationConfiguration(),j=c.getLoginAttempt();return h.register.jDB=function(a,b,c){new jEli.$jDB(a.DBNAME,a.version||1).isClientMode().requiresLogin().open(a.resource).onSuccess(function(a){var d=a.result;d._users().add(h.register.postBody).onSuccess(b).onError(c),d.close(!1)})},h.register.custom=function(b,c,d){b.url&&a({url:b.url,dataType:"json",contentType:"application/json",data:h.register.postBody}).then(c,d)},h.login.getHeader=function(){return{"Content-Type":"application/json",Accept:"application/json"}},h.login.oauth=function(c,d,e){var f=h.login.postBody,g=this.getHeader(),i="username="+encodeURIComponent(f.username)+"&password="+encodeURIComponent(f.password)+"&grant_type=password&scope=read%20write";g.Authorization="Basic "+b.encode(c.client_id+":"+c.client_secret),a.post(c.url,i,g).then(d,e)},h.login.custom=function(b,c,d){var e=h.login.postBody,f=this.getHeader();return a.post(b.url,e,f).then(c,d)},h.login.jdb=function(a,b,c){var d=h.login.postBody;new jEli.$jDB(a.DBNAME,a.version||1).isClientMode().requiresLogin().open(a.resource).onSuccess(function(a){var e=a.result;e._users().authorize(d).onSuccess(b).onError(c),e.close(!1)}).onError(c)},h.validate=function(a,b){if(!Object.keys(h[a].postBody).length)return void(this[a].requiresValidation=!0);var c=Object.keys(b),f=0;if(c.filter(function(b){h[a].postBody[b]||(f++,d(b,a,"Field is required"))}),!f){h[a].validationFailed=!1;jEli.forEach(h[a].postBody,function(c,f){var g=[];b[c]&&(g=e(f,b[c])),g.length&&d(c,a,g)})}},g.register={setData:function(a){return h.register.postBody=a,this},setRequiredFields:function(a){return f.apply(this,["register",a])},save:function(a,b){if(h.register.requiresValidation)return void b({reason:"Form Requires Validation - validateFields : API not called",code:"-101"});if(h.register.validationFailed)b({reason:"Failed Validation",fields:h.register.failedValidation,code:"-101"});else{var d=c.getRegisterConfiguration();d&&(d.DBNAME?h.register.jDB(d,a,b):h.register.custom(d,a,b))}}},g.addValidationRule=function(a,b){return a&&jEli.$isFunction(b)&&(i[a]=b),this},g.login={setData:function(a){return h.login.postBody=a,this},setRequiredFields:function(a){return f.apply(this,["login",a])},Authorize:function(a,b){if(!j)return void b({reason:"Too Many Login attempt",code:"-100"});if(h.login.requiresValidation)return void b({reason:"Form Requires Validation - validateFields : API not called",code:"-101"});if(h.login.validationFailed)b({reason:"Failed Validation",fields:h.login.failedValidation,code:"-102"});else{var d=c.getLoginConfiguration(),e=c.getLoginType();h.login[e](d,a,b)}j--}},g.authManager={init:function(a){h.authManager.userAuthenticationData=a},isAuthentication:function(){var a=h.authManager.userAuthenticationData;return!!a},destroy:function(){delete h.authManager.userAuthenticationData}},g}jEli.jModule("jeli.auth.service",[]).jProvider("jAuthProvider",a).jFactory("jAuthService",["$http","Base64","jAuthProvider",b])}();